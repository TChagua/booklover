{"version":3,"sources":["context.js","components/common/Heart.js","components/common/Book.js","components/Loader.js","components/Books.js","components/Header.js","components/Footer.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","books","addToFavorites","id","item","find","book","isFavorite","inherits","createClass","key","value","_this2","fetch","then","res","json","setState","items","map","catch","err","console","log","react_default","a","createElement","props","children","Component","Consumer","Heart","className","type","onChange","handleCheckBox","checked","Book","e","callback","target","_this$props","src","volumeInfo","imageLinks","thumbnail","alt","title","authors","Heart_Heart","description","Link","to","Loader","Books","undefined","match","path","endsWith","filter","Book_Book","Header","htmlFor","Footer","Details","params","small","publisher","publishedDate","printedPageCount","App","context_Provider","HashRouter","Route","exact","component","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d555e96.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\n  export class Provider extends Component {\r\n    state = {\r\n      books: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://www.googleapis.com/books/v1/volumes?q=a+very+short+introduction')\r\n        .then(res => res.json())\r\n        .then(books => {\r\n            this.setState({ books: books.items })  \r\n        })\r\n        .then(this.state.books.map(book => book.isFavorite = false))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    addToFavorites = (id) => {\r\n      let item = this.state.books.find(book => book.id ===id);\r\n      item.isFavorite = !item.isFavorite;\r\n    }\r\n    \r\n    \r\n    render() {\r\n      return (\r\n        <Context.Provider value={{\r\n          books: this.state.books, \r\n          addToFavorites: this.addToFavorites\r\n          }}>\r\n          {this.props.children}\r\n        </Context.Provider>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\n\r\nexport default class Heart extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <label className=\"heart-toggle-label\">\r\n          <input type=\"checkbox\" className=\"heart-toggle\" \r\n          onChange={this.props.handleCheckBox} \r\n          checked={this.props.checked}/>\r\n          <i className=\"fas fa-heart\"></i>\r\n        </label> \r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Link } from \"react-router-dom\";\r\nimport Heart from './Heart'\r\n\r\nexport default class Book extends Component {\r\n  state = {\r\n    checked: false\r\n };\r\n handleCheckBox =(e, callback, id) =>{\r\n    this.setState({\r\n      checked: e.target.checked\r\n    })\r\n    return callback(id)\r\n  }\r\n\r\n  \r\n  render() {\r\n    const {book, addToFavorites} = this.props;\r\n    return (\r\n      <article className=\"book\">\r\n        <img src={book.volumeInfo.imageLinks.thumbnail} alt=\"book-cover\"/> \r\n        <div>\r\n          <h2>{book.volumeInfo.title}</h2> \r\n          <h3>by {book.volumeInfo.authors}</h3>\r\n        </div>\r\n        <Heart \r\n        checked={this.state.checked} \r\n        handleCheckBox={(e) => this.handleCheckBox(e, addToFavorites, book.id)}/>\r\n        <p>{book.volumeInfo.description}</p> \r\n        <span><Link to={\"/details/\"+book.id}>read more >></Link></span>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">Loading...</div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../context';\r\nimport Book from './common/Book';\r\nimport Loader from './Loader'\r\nexport default class Books extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { books, addToFavorites} = value;\r\n          if(books===undefined) return <Loader />;\r\n          else {\r\n            return (\r\n              <main className=\"container\">\r\n              {this.props.match.path.endsWith('favorites') ? \r\n              books.filter(book => book.isFavorite ===true).map(book => {\r\n                return <Book \r\n                  key={book.id} \r\n                  book={book} \r\n                  addToFavorites={addToFavorites} \r\n                  />\r\n              }) : \r\n                books.map(book => {\r\n                  return <Book \r\n                  key={book.id} \r\n                  book={book} \r\n                  addToFavorites={addToFavorites} \r\n                  />  \r\n                })\r\n                }\r\n              </main>\r\n            )\r\n          } \r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {Link } from \"react-router-dom\";\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n        <h1 className=\"logo\">Booklover</h1>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" className=\"nav-toggle\" />\r\n        <nav>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/favorites\">Favorites</Link></li>\r\n            </ul>\r\n        </nav>\r\n        <label htmlFor=\"nav-toggle\" className=\"nav-toggle-label\">\r\n          <span></span>\r\n        </label>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n        <p>Copyright Tea Chagua, &copy; 2019</p>\r\n    </footer>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Loader from './Loader'\r\nexport default class Details extends Component {\r\n    state = {\r\n        book: null\r\n    };\r\n    \r\n    componentDidMount() {\r\n      fetch('https://www.googleapis.com/books/v1/volumes/'+ this.props.match.params.id)\r\n      .then(res => res.json())\r\n      .then(book => {\r\n          this.setState({ book: book.volumeInfo})\r\n      })\r\n    }\r\n  render() {\r\n    const {book} = this.state;\r\n    if (book===null) return <Loader />\r\n    return book && (\r\n      <main className=\"details\">\r\n        <img src={book.imageLinks.small || book.imageLinks.thumbnail} alt=\"book-cover\"/>\r\n        <section className=\"book-info\">\r\n            <h2>{book.title}</h2>\r\n            <h3>by {book.authors}</h3>\r\n            <p>{book.description}</p>\r\n        </section>\r\n        <section className=\"publication-info\">\r\n            <hr/>\r\n            <p><strong>Publisher: </strong> {book.publisher}</p>\r\n            <p><strong>Publication Date: </strong> {book.publishedDate}</p>\r\n            <p><strong>Pages: </strong> {book.printedPageCount}</p>\r\n        </section>   \r\n      </main>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport { Provider } from './context';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Books from './components/Books';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Details from './components/Details';\nimport \"./styles/main.css\";\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div>\n            <Header />\n            <Route exact path=\"/\" component={Books} />\n            <Route exact path=\"/favorites\" component={Books} />\n            <Route exact path=\"/details/:id\" component={Details} />\n            <Footer />\n          </div> \n        </Router>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}